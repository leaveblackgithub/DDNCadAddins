# DDNCadAddins项目编码规则
# 版本：1.2.0
# 最后更新：2024-06-24
# 
# 以下规则旨在避免常见的编码错误和提高代码质量

## 代码分析规则

### 接口与实现规则
1. 接口实现检查
   - 在修改类声明前，先确认该类是否已在其他文件中声明了接口实现
   - 对于部分类(partial class)，检查所有相关文件中的声明

2. 接口变更影响分析
   - 修改接口前，先搜索所有实现该接口的类
   - 使用`grep_search "class.*implements.*接口名"`确认所有实现
   - 接口变更后，确保修改所有实现类

3. 接口实现同步原则
   - 新增接口或抽象类时，立即创建至少一个具体实现
   - 实现类中确保实现接口的每个方法，哪怕只是空实现
   - 核对方法签名是否完全匹配（参数类型、顺序、修饰符）

### 代码修改安全规则
1. 编辑前完整阅读
   - 编辑代码前，先完整阅读目标文件的内容，特别是类声明部分
   - 不要仅基于片段进行修改，确保了解整个类的结构

2. 类结构分析步骤
   - 检查文件命名模式（如`.Core.cs`, `.Operation.cs`等）识别部分类
   - 使用grep搜索同名不同后缀的文件

3. 声明变更跟踪
   - 修改类/方法/属性/事件声明后，执行全局搜索检查所有使用点
   - 使用具体名称进行多次搜索：`类名.方法名`、`new 类名(`、`类名 变量名`
   - 检查依赖该类型的泛型定义`<类名>`

4. 增量验证检查
   - 新增/修改代码后，逐行验证每个类型、方法和属性的存在性
   - 检查命名空间是否正确导入
   - 验证方法参数类型和返回类型是否匹配

5. 部分类协调规则
   - 增加新的部分类文件时，确保命名符合项目约定（如`.Core.cs`, `.Operation.cs`）
   - 每个部分类文件顶部添加注释说明其职责范围
   - 确保所有部分类文件的命名空间一致

### 依赖管理规则
1. 依赖注入验证
   - 为每个服务类编写注册代码，并立即添加到`ServiceLocator`
   - 修改构造函数参数后，检查所有实例化点和DI容器注册
   - 使用`grep_search "new 类名\(.*\)"`查找所有手动实例化点

2. 构建后检查
   - 每次修改后执行构建，分析所有编译错误
   - 错误分类处理：先解决语法错误，再处理运行时错误
   - 建立错误记录机制，避免反复发生同样问题

## 命令行工具使用规则

### Windows CMD语法规则
1. Windows CMD语法标准化
   - 使用`cmd /c`前缀确保命令在CMD环境中执行
   - 避免在PowerShell环境中使用CMD特有语法
   - 命令中的路径使用双引号而非单引号

2. 引号处理规范
   - 搜索含空格或特殊字符的字符串时使用双引号
   - 搜索参数与值之间使用空格分隔
   - Windows环境中避免嵌套引号，改用转义字符

3. 搜索命令模板
   - 文件内容搜索：`cmd /c "type 文件路径 | findstr 关键词"`
   - 目录搜索：`cmd /c "dir /s /b 文件名模式"`
   - 文本搜索：`cmd /c "findstr /n /i 关键词 文件路径"` 