# SOLIDCheck指令
# 版本：1.2.0
# 最后更新：2025-06-16

在运行SOLIDChecker.bat之前，请确保代码符合以下标准：

## SOLID原则检查
1. 单一职责原则 (SRP)
   - 类是否只有一个修改原因
   - 方法是否只做一件事
   - 避免超过20行的方法

2. 开闭原则 (OCP)
   - 是否通过扩展而非修改添加新功能
   - 避免大量条件语句
   - 使用多态替代条件判断

3. 里氏替换原则 (LSP)
   - 子类是否可以替换基类
   - 子类是否改变了基类行为
   - 子类是否抛出基类未声明的异常

4. 接口隔离原则 (ISP)
   - 接口是否小而精炼
   - 实现类是否实现所有方法
   - 避免客户端依赖不使用的方法

5. 依赖倒置原则 (DIP)
   - 高层模块是否依赖抽象
   - 是否通过依赖注入传递依赖
   - 避免直接实例化具体类

## 语法错误检查
1. 资源管理错误
   - 使用using语句管理IDisposable资源
   - 避免未释放的资源
   - 检查文件、数据库连接等资源是否正确释放

2. 空引用错误
   - 使用?.运算符或null检查
   - 为可空类型提供默认值
   - 避免直接访问可能为null的对象

3. 泛型错误
   - 明确指定类型约束(where T : class, new())
   - 避免类型不匹配错误
   - 验证泛型参数的正确性

4. 接口实现错误
   - 方法签名是否与接口完全匹配
   - 参数类型顺序是否一致
   - 所有接口方法是否都已实现

执行检查后，请运行build.bat验证构建是否成功，并修复所有编译错误。

## Cursor特定代码检查
1. 使用.cursor/rules/cursor_syntax_check.mdc中定义的规则检查语法错误
2. 运行规则验证命令：/rules test
3. 检查代码生成是否符合项目规范
4. 确保使用.NET Framework 4.7兼容的模型生成代码

完成所有检查后，提交代码前请再次运行SOLIDChecker.bat确认所有问题已修复。

========================================
SOLID原则检查工具 - DDNCadAddins
========================================

请在Cursor的AI面板中输入以下命令(按Ctrl+Shift+L打开AI面板):

分析当前项目中的代码，检查是否遵循SOLID原则。特别关注:
1. 单一责任原则违反
2. 开闭原则违反
3. 里氏替换原则违反
4. 接口隔离原则违反
5. 依赖倒置原则违反
请详细列出发现的问题和建议的改进方案。
同时将分析结果保存到reports/solid_report_[当前时间].md文件中

========================================
使用方法:
1. 打开Cursor (可以双击项目文件夹中的任意文件)
2. 按Ctrl+Shift+L打开AI面板
3. 复制上面的文本粘贴到AI面板
4. 按Enter发送

检查结果将保存到项目根目录下的reports文件夹中。 